%% Random indoor environment generator
% This matlab script makes random environments within a given boundaries of
% an environment. The corridors are generated by virtual agents, started from
% each location that the robot in the final environment will start from. This
% script ensures that the generated corridors are always connected to
% each other. After the corridor generation, doors and rooms are created at
% random as well.
%%%%%%%%%%%
% Authored by Kimberly McGuire (k.n.mcguire@tudelft.nl)
%%%%%%%%%%%%


close all
clc
clear all

boundaries_with_holes = imread('g_env.png')
boundaries_with_holes = rgb2gray(boundaries_with_holes)
boundery_coord_new=[];

[boundery_coord_new(:,2), boundery_coord_new(:,1)] = find(boundaries_with_holes==255);
    figure,imshow(boundaries_with_holes)

width_environment = 5;
height_environment =5;
resolution=2;
starting_location_agents = [0.75,3.5;3.5,2.5];

%%  Create Argos environment
% Makes an ARGoS environment based on the random agent-based environment
% builder, by making each box a pixel in the following form:

%  <box id="wall_west" size="0.1,20,0.5" movable="false">
%       <body position="x_pos_argos,y_pos_argos,0" orientation="0,0,0"/>
% </box>
% TO DO: put robots on postions
%
%
    
    
    % Start of environment, based on height and width of the generated one
    str_start_arena = sprintf('<arena size="%d, %d, 2" center="0,0,0.5">',width_environment*resolution,height_environment*resolution);
    str_start_arena= strcat(str_start_arena, ...
        sprintf('\n<box id="wall_1" size="%d,0.1,0.5" movable="false"> \n <body position="0,%d,0" orientation="0,0,0"/>\n</box>' ...
        ,width_environment*resolution,width_environment/2*resolution));
    str_start_arena= strcat(str_start_arena, ...
        sprintf('\n<box id="wall_2" size="%d,0.1,0.5" movable="false"> \n <body position="0,%d,0" orientation="0,0,0"/>\n</box>' ...
        ,width_environment*resolution,-width_environment/2*resolution));
    str_start_arena= strcat(str_start_arena, ...
        sprintf('\n<box id="wall_3" size="0.1,%d,0.5" movable="false"> \n <body position="%d,0,0" orientation="0,0,0"/>\n</box>' ...
        ,width_environment*resolution,width_environment/2*resolution));
    str_start_arena= strcat(str_start_arena, ...
        sprintf('\n<box id="wall_4" size="0.1,%d,0.5" movable="false"> \n <body position="%d,0,0" orientation="0,0,0"/>\n</box>' ...
        ,width_environment*resolution,-width_environment/2*resolution));
    
    str_loc_bot = "";
    rotation=[0, -90];
    for k = 1:size(starting_location_agents,1)
        str_loc_bot = strcat(str_loc_bot,sprintf('\n<foot-bot id="bot%d">',k-1));
        str_loc_bot = strcat(str_loc_bot,sprintf('\n<body position="%d,%d,0" orientation="%d,0,0" />',...
            starting_location_agents(k,1)*resolution - 1 - width_environment/2*resolution,...
            starting_location_agents(k,2)*resolution -1- height_environment/2*resolution,...
            rotation(k)));
        str_loc_bot = strcat(str_loc_bot,sprintf('\n<controller config="argos_ros_bot"/>\n</foot-bot>'));
    end

    
    
    x_pos_argos = size(boundery_coord_new,1);
    y_pos_argos = size(boundery_coord_new,1);
    id = zeros(size(boundery_coord_new,1),1);
    
    
    % Transform each boundary coordinate to a coordinate in ARGoS
    h=1;
    for k=1:size(boundery_coord_new,1)
        id(h) = h;
        y_pos_argos(h)=boundery_coord_new(k,1) / 10*resolution - width_environment/2*resolution;
        x_pos_argos(h)=boundery_coord_new(k,2) / 10*resolution - height_environment/2*resolution;
        h=h+1;
    end
    list= zeros(length(id),3);
    list(:,1)=id;
    list(:,2)=x_pos_argos;
    list(:,3)=y_pos_argos;
    
    % Put a box as a pixel on where the boundaries are generated
    formatspec = '\n<box id="%d" size="0.2,0.2,0.5" movable="false"> <body position="%4.2f,%4.2f,0" orientation="0,0,0"/> </box>';
    str_random_env = sprintf(formatspec,list');
    
    %specify end of environment area
    str_end_arena = sprintf('\n</arena>');
    
    %Concatenate the strings together
    str_total = strcat(str_start_arena,str_loc_bot, str_random_env, str_end_arena);
    
    % Read out the template file, use it to find the trigger string (which is
    % <arena></arena> in here). Then replace it with str_total with the random
    % generated environment
    fid = fopen(fullfile('..', 'argos_worlds', 'rand_env_template.argos'),'rt');
    f=fread(fid);
    f=char(f.');
    f = strrep(f,'<arena></arena>',str_total);
    fid  = fopen(fullfile('..', 'argos_worlds', 'rand_env_test.argos'),'wt');
    fwrite(fid,f) ;
    fclose(fid);
%And you are finished :):):)
disp('Environment generated and saved in ../argos_world/rand_env_test.argos !!!')
